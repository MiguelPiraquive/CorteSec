# Generated by Django 5.2 on 2025-08-22 01:20

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModuloReporte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(help_text='Ej: Empleados, Préstamos, Proyectos', max_length=100, verbose_name='Nombre del módulo')),
                ('codigo', models.CharField(help_text='Ej: empleados, prestamos, proyectos', max_length=50, verbose_name='Código del módulo')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('app_name', models.CharField(help_text='Ej: payroll, prestamos, locations', max_length=50, verbose_name='Nombre de la app Django')),
                ('model_name', models.CharField(help_text='Ej: Employee, Prestamo, Location', max_length=50, verbose_name='Nombre del modelo')),
                ('icono', models.CharField(default='fas fa-table', max_length=50, verbose_name='Icono FontAwesome')),
                ('color', models.CharField(default='primary', max_length=20, verbose_name='Color del tema')),
                ('campos_disponibles', models.JSONField(default=dict, help_text='Diccionario con nombre_campo: {label, tipo, filtrable}', verbose_name='Campos disponibles para reportes')),
                ('campos_por_defecto', models.JSONField(default=list, verbose_name='Campos mostrados por defecto')),
                ('filtros_disponibles', models.JSONField(default=dict, help_text='Configuración de filtros dinámicos', verbose_name='Filtros disponibles')),
                ('relaciones_disponibles', models.JSONField(default=dict, help_text='Para incluir datos de modelos relacionados', verbose_name='Relaciones con otros modelos')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('orden', models.PositiveIntegerField(default=0, verbose_name='Orden de presentación')),
                ('requiere_permiso', models.CharField(blank=True, max_length=100, verbose_name='Permiso requerido')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='modulos_reporte_creados', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modulos_reporte', to='core.organizacion')),
            ],
            options={
                'verbose_name': 'Módulo de Reporte',
                'verbose_name_plural': 'Módulos de Reporte',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionReporte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la configuración')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('filtros', models.JSONField(default=dict, verbose_name='Filtros configurados')),
                ('columnas', models.JSONField(default=list, verbose_name='Columnas seleccionadas')),
                ('ordenamiento', models.JSONField(default=list, verbose_name='Ordenamiento')),
                ('formato_preferido', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel (.xlsx)'), ('csv', 'CSV'), ('json', 'JSON')], default='excel', max_length=10, verbose_name='Formato preferido')),
                ('es_publica', models.BooleanField(default=False, help_text='Otros usuarios de la organización pueden usarla', verbose_name='Es pública')),
                ('es_favorita', models.BooleanField(default=False, verbose_name='Es favorita')),
                ('veces_usada', models.PositiveIntegerField(default=0, verbose_name='Veces usada')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='configuraciones_reporte_creadas', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_reporte', to='core.organizacion')),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones', to='reportes.moduloreporte')),
            ],
            options={
                'verbose_name': 'Configuración de Reporte',
                'verbose_name_plural': 'Configuraciones de Reporte',
                'ordering': ['-es_favorita', '-veces_usada', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ReporteGenerado',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200, verbose_name='Título del reporte')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('formato', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel (.xlsx)'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10, verbose_name='Formato de descarga')),
                ('filtros_aplicados', models.JSONField(default=dict, help_text='Filtros que se aplicaron para generar el reporte', verbose_name='Filtros aplicados')),
                ('columnas_seleccionadas', models.JSONField(default=list, help_text='Lista de campos incluidos en el reporte', verbose_name='Columnas incluidas')),
                ('ordenamiento', models.JSONField(default=list, help_text='Criterios de ordenamiento', verbose_name='Ordenamiento aplicado')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha inicio del período')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha fin del período')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('procesando', 'Procesando'), ('completado', 'Completado'), ('error', 'Error'), ('expirado', 'Expirado')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('progreso', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progreso (%)')),
                ('archivo', models.FileField(blank=True, null=True, upload_to='reportes/%Y/%m/%d/', verbose_name='Archivo del reporte')),
                ('nombre_archivo', models.CharField(blank=True, max_length=255, verbose_name='Nombre del archivo')),
                ('tamaño_archivo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tamaño del archivo (bytes)')),
                ('total_registros', models.PositiveIntegerField(default=0, verbose_name='Total de registros incluidos')),
                ('tiempo_generacion', models.FloatField(blank=True, null=True, verbose_name='Tiempo de generación (segundos)')),
                ('mensaje_error', models.TextField(blank=True, verbose_name='Mensaje de error')),
                ('es_publico', models.BooleanField(default=False, verbose_name='Es público')),
                ('fecha_expiracion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de expiración')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de generación')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('veces_descargado', models.PositiveIntegerField(default=0, verbose_name='Veces descargado')),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True, verbose_name='Último acceso')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reportes_generados', to=settings.AUTH_USER_MODEL, verbose_name='Generado por')),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reportes_generados', to='reportes.moduloreporte', verbose_name='Módulo del reporte')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_generados', to='core.organizacion')),
            ],
            options={
                'verbose_name': 'Reporte Generado',
                'verbose_name_plural': 'Reportes Generados',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LogReporte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accion', models.CharField(choices=[('generar', 'Generar reporte'), ('descargar', 'Descargar reporte'), ('eliminar', 'Eliminar reporte'), ('configurar', 'Guardar configuración'), ('error', 'Error')], max_length=20, verbose_name='Acción')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('detalles', models.JSONField(default=dict, verbose_name='Detalles adicionales')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_reporte', to='core.organizacion')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='logs_reporte', to=settings.AUTH_USER_MODEL)),
                ('modulo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reportes.moduloreporte')),
                ('reporte', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='reportes.reportegenerado')),
            ],
            options={
                'verbose_name': 'Log de Reporte',
                'verbose_name_plural': 'Logs de Reportes',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='moduloreporte',
            index=models.Index(fields=['organization', 'activo'], name='reportes_mo_organiz_58b02b_idx'),
        ),
        migrations.AddIndex(
            model_name='moduloreporte',
            index=models.Index(fields=['app_name', 'model_name'], name='reportes_mo_app_nam_6812e7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='moduloreporte',
            unique_together={('organization', 'codigo')},
        ),
        migrations.AlterUniqueTogether(
            name='configuracionreporte',
            unique_together={('organization', 'modulo', 'nombre', 'created_by')},
        ),
        migrations.AddIndex(
            model_name='reportegenerado',
            index=models.Index(fields=['organization', 'estado'], name='reportes_re_organiz_5cbf0c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportegenerado',
            index=models.Index(fields=['modulo', 'created_at'], name='reportes_re_modulo__2cadc7_idx'),
        ),
        migrations.AddIndex(
            model_name='reportegenerado',
            index=models.Index(fields=['generado_por', 'created_at'], name='reportes_re_generad_bac11a_idx'),
        ),
        migrations.AddIndex(
            model_name='reportegenerado',
            index=models.Index(fields=['estado', 'created_at'], name='reportes_re_estado_b24fa8_idx'),
        ),
        migrations.AddIndex(
            model_name='logreporte',
            index=models.Index(fields=['organization', 'timestamp'], name='reportes_lo_organiz_8adc61_idx'),
        ),
        migrations.AddIndex(
            model_name='logreporte',
            index=models.Index(fields=['usuario', 'accion'], name='reportes_lo_usuario_b71a4b_idx'),
        ),
    ]
