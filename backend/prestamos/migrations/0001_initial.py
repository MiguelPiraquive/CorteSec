# Generated by Django 5.2 on 2025-08-22 01:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('payroll', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoPrestamo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único del tipo de préstamo', primary_key=True, serialize=False)),
                ('nombre', models.CharField(help_text='Nombre descriptivo del tipo de préstamo', max_length=100, verbose_name='Nombre del tipo')),
                ('codigo', models.CharField(help_text='Código único del tipo de préstamo', max_length=20, validators=[django.core.validators.RegexValidator(message='El código debe contener solo letras mayúsculas, números y guiones bajos', regex='^[A-Z0-9_]{2,20}$')], verbose_name='Código')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del tipo de préstamo', verbose_name='Descripción')),
                ('monto_minimo', models.DecimalField(decimal_places=2, help_text='Monto mínimo permitido para este tipo', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto mínimo')),
                ('monto_maximo', models.DecimalField(decimal_places=2, help_text='Monto máximo permitido para este tipo', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto máximo')),
                ('tasa_interes_defecto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tasa de interés anual por defecto', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tasa de interés por defecto (%)')),
                ('tasa_interes_minima', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tasa de interés mínima permitida', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tasa de interés mínima (%)')),
                ('tasa_interes_maxima', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Tasa de interés máxima permitida', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tasa de interés máxima (%)')),
                ('plazo_minimo_meses', models.PositiveIntegerField(default=1, help_text='Plazo mínimo permitido en meses', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Plazo mínimo (meses)')),
                ('plazo_maximo_meses', models.PositiveIntegerField(default=60, help_text='Plazo máximo permitido en meses', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Plazo máximo (meses)')),
                ('requiere_garantia', models.BooleanField(default=False, help_text='Si este tipo de préstamo requiere garantía', verbose_name='Requiere garantía')),
                ('requiere_aprobacion', models.BooleanField(default=True, help_text='Si requiere aprobación de un superior', verbose_name='Requiere aprobación')),
                ('permite_prepago', models.BooleanField(default=True, help_text='Si permite pago anticipado sin penalización', verbose_name='Permite prepago')),
                ('configuracion_avanzada', models.JSONField(blank=True, default=dict, help_text='Configuraciones adicionales en formato JSON', verbose_name='Configuración avanzada')),
                ('activo', models.BooleanField(default=True, help_text='Si está activo, estará disponible para nuevos préstamos', verbose_name='Activo')),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de presentación en listados', verbose_name='Orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tipos_prestamo_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('organization', models.ForeignKey(help_text='Organización a la que pertenece este tipo', on_delete=django.db.models.deletion.CASCADE, related_name='tipos_prestamo', to='core.organizacion')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tipos_prestamo_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'Tipo de Préstamo',
                'verbose_name_plural': 'Tipos de Préstamo',
                'ordering': ['orden', 'codigo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único del préstamo', primary_key=True, serialize=False)),
                ('numero_prestamo', models.CharField(help_text='Número único del préstamo (se genera automáticamente)', max_length=20, unique=True, verbose_name='Número de préstamo')),
                ('monto_solicitado', models.DecimalField(decimal_places=2, help_text='Monto solicitado por el empleado', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto solicitado')),
                ('monto_aprobado', models.DecimalField(blank=True, decimal_places=2, help_text='Monto aprobado (puede ser diferente al solicitado)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto aprobado')),
                ('tasa_interes', models.DecimalField(decimal_places=2, help_text='Tasa de interés anual aplicada', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tasa de interés (%)')),
                ('plazo_meses', models.PositiveIntegerField(help_text='Plazo del préstamo en meses', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Plazo (meses)')),
                ('cuota_mensual', models.DecimalField(blank=True, decimal_places=2, help_text='Cuota mensual calculada (se calcula automáticamente)', max_digits=12, null=True, verbose_name='Cuota mensual')),
                ('fecha_solicitud', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se realizó la solicitud', verbose_name='Fecha de solicitud')),
                ('fecha_aprobacion', models.DateField(blank=True, help_text='Fecha en que fue aprobado el préstamo', null=True, verbose_name='Fecha de aprobación')),
                ('fecha_desembolso', models.DateField(blank=True, help_text='Fecha en que se desembolsó el dinero', null=True, verbose_name='Fecha de desembolso')),
                ('fecha_primer_pago', models.DateField(blank=True, help_text='Fecha programada para el primer pago', null=True, verbose_name='Fecha primer pago')),
                ('fecha_ultimo_pago', models.DateField(blank=True, help_text='Fecha programada para el último pago', null=True, verbose_name='Fecha último pago')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('solicitado', 'Solicitado'), ('en_revision', 'En revisión'), ('pendiente', 'Pendiente de aprobación'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('desembolsado', 'Desembolsado'), ('activo', 'Activo (en pago)'), ('completado', 'Completado'), ('cancelado', 'Cancelado'), ('en_mora', 'En mora'), ('reestructurado', 'Reestructurado')], default='borrador', help_text='Estado actual del préstamo', max_length=20, verbose_name='Estado')),
                ('tipo_garantia', models.CharField(choices=[('ninguna', 'Sin garantía'), ('personal', 'Garantía personal'), ('hipotecaria', 'Garantía hipotecaria'), ('vehicular', 'Garantía vehicular'), ('prendaria', 'Garantía prendaria'), ('deposito', 'Depósito en garantía'), ('codeudor', 'Codeudor'), ('otra', 'Otra')], default='ninguna', help_text='Tipo de garantía ofrecida', max_length=20, verbose_name='Tipo de garantía')),
                ('garantia_descripcion', models.TextField(blank=True, help_text='Descripción detallada de la garantía ofrecida', verbose_name='Descripción de garantía')),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales sobre el préstamo', verbose_name='Observaciones')),
                ('motivo_rechazo', models.TextField(blank=True, help_text='Motivo del rechazo si aplica', verbose_name='Motivo de rechazo')),
                ('saldo_pendiente', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Saldo pendiente por pagar', max_digits=12, verbose_name='Saldo pendiente')),
                ('total_pagado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total pagado hasta la fecha', max_digits=12, verbose_name='Total pagado')),
                ('total_intereses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total de intereses calculados', max_digits=12, verbose_name='Total intereses')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('aprobado_por', models.ForeignKey(blank=True, help_text='Usuario que aprobó el préstamo', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prestamos_aprobados', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prestamos_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('desembolsado_por', models.ForeignKey(blank=True, help_text='Usuario que realizó el desembolso', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prestamos_desembolsados', to=settings.AUTH_USER_MODEL, verbose_name='Desembolsado por')),
                ('empleado', models.ForeignKey(help_text='Empleado que solicita el préstamo', on_delete=django.db.models.deletion.PROTECT, related_name='prestamos', to='payroll.empleado', verbose_name='Empleado')),
                ('organization', models.ForeignKey(help_text='Organización a la que pertenece este préstamo', on_delete=django.db.models.deletion.CASCADE, related_name='prestamos', to='core.organizacion')),
                ('solicitado_por', models.ForeignKey(help_text='Usuario que registró la solicitud', on_delete=django.db.models.deletion.PROTECT, related_name='prestamos_solicitados', to=settings.AUTH_USER_MODEL, verbose_name='Solicitado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prestamos_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('tipo_prestamo', models.ForeignKey(help_text='Tipo de préstamo solicitado', on_delete=django.db.models.deletion.PROTECT, related_name='prestamos', to='prestamos.tipoprestamo', verbose_name='Tipo de préstamo')),
            ],
            options={
                'verbose_name': 'Préstamo',
                'verbose_name_plural': 'Préstamos',
                'ordering': ['-fecha_solicitud', '-numero_prestamo'],
            },
        ),
        migrations.CreateModel(
            name='PagoPrestamo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_pago', models.CharField(help_text='Número secuencial del pago', max_length=20, verbose_name='Número de pago')),
                ('fecha_pago', models.DateField(verbose_name='Fecha de pago')),
                ('tipo_pago', models.CharField(choices=[('cuota', 'Pago de cuota'), ('abono_capital', 'Abono a capital'), ('pago_total', 'Pago total'), ('prepago', 'Prepago'), ('interes', 'Pago de intereses'), ('mora', 'Pago de mora')], default='cuota', max_length=20, verbose_name='Tipo de pago')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia bancaria'), ('cheque', 'Cheque'), ('descuento_nomina', 'Descuento de nómina'), ('tarjeta', 'Tarjeta de crédito/débito'), ('otro', 'Otro')], default='efectivo', max_length=20, verbose_name='Método de pago')),
                ('monto_pago', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto del pago')),
                ('monto_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Monto aplicado a capital')),
                ('monto_interes', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Monto aplicado a intereses')),
                ('monto_mora', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Monto aplicado a mora')),
                ('saldo_anterior', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Saldo anterior')),
                ('saldo_nuevo', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Nuevo saldo')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('comprobante', models.CharField(blank=True, max_length=50, verbose_name='Número de comprobante')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('organization', models.ForeignKey(blank=True, help_text='Organización a la que pertenece este registro', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='core.organizacion')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagos_prestamos_registrados', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('prestamo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagos', to='prestamos.prestamo', verbose_name='Préstamo')),
            ],
            options={
                'verbose_name': 'Pago de Préstamo',
                'verbose_name_plural': 'Pagos de Préstamos',
                'ordering': ['-fecha_pago', '-created_at'],
                'indexes': [models.Index(fields=['prestamo', 'fecha_pago'], name='prestamos_p_prestam_9fd7c1_idx'), models.Index(fields=['numero_pago'], name='prestamos_p_numero__620c3f_idx'), models.Index(fields=['fecha_pago'], name='prestamos_p_fecha_p_032060_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='tipoprestamo',
            index=models.Index(fields=['organization', 'activo'], name='prestamos_t_organiz_a3cfff_idx'),
        ),
        migrations.AddIndex(
            model_name='tipoprestamo',
            index=models.Index(fields=['codigo'], name='prestamos_t_codigo_dd3e48_idx'),
        ),
        migrations.AddIndex(
            model_name='tipoprestamo',
            index=models.Index(fields=['created_at'], name='prestamos_t_created_9e6297_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tipoprestamo',
            unique_together={('organization', 'codigo')},
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['organization', 'estado'], name='prestamos_p_organiz_29e156_idx'),
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['empleado', 'estado'], name='prestamos_p_emplead_e2ad3b_idx'),
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['numero_prestamo'], name='prestamos_p_numero__9b4dbf_idx'),
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['estado'], name='prestamos_p_estado_ca1dfe_idx'),
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['fecha_solicitud'], name='prestamos_p_fecha_s_9a4d78_idx'),
        ),
        migrations.AddIndex(
            model_name='prestamo',
            index=models.Index(fields=['fecha_aprobacion'], name='prestamos_p_fecha_a_2d033c_idx'),
        ),
    ]
