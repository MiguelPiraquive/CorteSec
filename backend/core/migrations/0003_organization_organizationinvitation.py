# Generated by Django 5.2 on 2025-08-22 03:13

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único de la organización', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre completo de la organización o empresa', max_length=200, verbose_name='Nombre de la organización')),
                ('slug', models.SlugField(help_text='Identificador único para URL (ej: empresa.cortesec.com)', unique=True, verbose_name='Slug/Subdominio')),
                ('display_name', models.CharField(blank=True, help_text='Nombre corto para mostrar en la interfaz', max_length=100, verbose_name='Nombre para mostrar')),
                ('description', models.TextField(blank=True, help_text='Descripción de la organización y su actividad', verbose_name='Descripción')),
                ('email', models.EmailField(blank=True, help_text='Email principal de la organización', max_length=254, verbose_name='Email de contacto')),
                ('phone', models.CharField(blank=True, help_text='Teléfono de contacto principal', max_length=20, verbose_name='Teléfono')),
                ('website', models.URLField(blank=True, help_text='Sitio web oficial de la organización', verbose_name='Sitio web')),
                ('address', models.TextField(blank=True, help_text='Dirección física de la organización', verbose_name='Dirección')),
                ('city', models.CharField(blank=True, help_text='Ciudad donde se ubica la organización', max_length=100, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, help_text='Estado o provincia', max_length=100, verbose_name='Estado/Provincia')),
                ('country', models.CharField(blank=True, help_text='País donde opera la organización', max_length=100, verbose_name='País')),
                ('postal_code', models.CharField(blank=True, help_text='Código postal o ZIP', max_length=20, verbose_name='Código postal')),
                ('plan', models.CharField(choices=[('FREE', 'Gratuito'), ('BASIC', 'Básico'), ('PRO', 'Profesional'), ('ENTERPRISE', 'Empresarial')], default='FREE', help_text='Plan actual de la organización', max_length=20, verbose_name='Plan de suscripción')),
                ('max_users', models.PositiveIntegerField(default=5, help_text='Número máximo de usuarios permitidos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)], verbose_name='Máximo de usuarios')),
                ('max_storage_mb', models.PositiveIntegerField(default=1024, help_text='Espacio de almacenamiento máximo en megabytes', validators=[django.core.validators.MinValueValidator(100)], verbose_name='Almacenamiento máximo (MB)')),
                ('is_active', models.BooleanField(default=True, help_text='Si la organización está activa y operativa', verbose_name='Activa')),
                ('is_trial', models.BooleanField(default=True, help_text='Si la organización está en periodo de prueba', verbose_name='En periodo de prueba')),
                ('trial_ends_at', models.DateTimeField(blank=True, help_text='Fecha y hora cuando termina el periodo de prueba', null=True, verbose_name='Fin del periodo de prueba')),
                ('settings', models.JSONField(blank=True, default=dict, help_text='Configuraciones específicas de la organización', verbose_name='Configuraciones')),
                ('logo', models.ImageField(blank=True, help_text='Logo de la organización', null=True, upload_to='organizations/logos/', verbose_name='Logo')),
                ('primary_color', models.CharField(default='#007bff', help_text='Color primario para la interfaz (formato hex)', max_length=7, verbose_name='Color primario')),
                ('timezone', models.CharField(default='America/Bogota', help_text='Zona horaria predeterminada', max_length=50, verbose_name='Zona horaria')),
                ('language', models.CharField(default='es', help_text='Idioma predeterminado', max_length=10, verbose_name='Idioma')),
                ('currency', models.CharField(default='COP', help_text='Moneda predeterminada (código ISO)', max_length=3, verbose_name='Moneda')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación de la organización', verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización', verbose_name='Última actualización')),
            ],
            options={
                'verbose_name': 'Organización',
                'verbose_name_plural': 'Organizaciones',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='core_organi_slug_517c11_idx'), models.Index(fields=['is_active'], name='core_organi_is_acti_9518a1_idx'), models.Index(fields=['plan'], name='core_organi_plan_a11d8a_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrganizationInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='Email de la persona a invitar', max_length=254, verbose_name='Email del invitado')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('MANAGER', 'Gerente'), ('MEMBER', 'Miembro'), ('VIEWER', 'Visualizador')], default='MEMBER', help_text='Rol que tendrá el usuario en la organización', max_length=20, verbose_name='Rol propuesto')),
                ('message', models.TextField(blank=True, help_text='Mensaje opcional para incluir en la invitación', verbose_name='Mensaje personalizado')),
                ('is_accepted', models.BooleanField(default=False, help_text='Si la invitación ha sido aceptada', verbose_name='Aceptada')),
                ('accepted_at', models.DateTimeField(blank=True, help_text='Fecha y hora cuando se aceptó la invitación', null=True, verbose_name='Fecha de aceptación')),
                ('expires_at', models.DateTimeField(help_text='Fecha y hora cuando expira la invitación', verbose_name='Fecha de expiración')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('accepted_by', models.ForeignKey(blank=True, help_text='Usuario que aceptó la invitación', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_invitations', to=settings.AUTH_USER_MODEL)),
                ('invited_by', models.ForeignKey(help_text='Usuario que envió la invitación', on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='Organización que envía la invitación', on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='core.organization')),
            ],
            options={
                'verbose_name': 'Invitación a organización',
                'verbose_name_plural': 'Invitaciones a organización',
                'indexes': [models.Index(fields=['email'], name='core_organi_email_4aad5a_idx'), models.Index(fields=['expires_at'], name='core_organi_expires_7843e2_idx')],
                'unique_together': {('organization', 'email')},
            },
        ),
    ]
